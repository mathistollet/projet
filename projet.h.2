#include <unistd.h>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <time.h>
#include <errno.h>
#define RESET   "\033[0m"
#define RED     "\033[0;31m"
#define GREEN   "\033[0;32m"
#define ORANGE  "\033[38;5;208m"
#define SIZE 1000

typedef enum {
    tank, assassin, soutien
} Type;

typedef struct {
    char nom[30];
    int degats;
} Attaque;

typedef struct {
    char nom[50];
    char description[100];
    float valeur;
    char propriete[20];
    char operation[10];
    int tours_actifs;
    int recharge_max;
    int recharge_restante;
} Technique;

typedef struct {
    char nom[50];
    int pvc;
    int pvm;
    float def;
    float defmax;
    float agl;
    float vitess;
    float vitessmax;
    float barre_action;
    Attaque att[2];
    Type type;
    Technique technique;
    int tours_effet_restant;
} Champion;






void debutc();
void rayman();
void boo();
void groot();
void toad();
void jouer();
void lancer();
void yoda();
void yoshi();
void cible();
void vs();
void printCouleur(const char *texte, const char *couleur);
int chargerChampionsDepuisFichier(const char* personnages, Champion* champions, int max);
int lireEntier(int *valeur);
void afficherChampion( Champion* c, int index);
int estDejaChoisi(Champion* equipes, int taille, Champion* candidat);
void afficherBarreDeVie(int pvact, int pvmax);
void afficherBarreDeVitesse(float barre_action);
void afficherVie(Champion p1);
int esquive(int chance);
void utiliserAttaque(Champion *attaquant, Champion *cible, Attaque a);
void utiliserTechnique(Champion *utilisateur, Champion *cible);
void soigner(Champion* c);
void combat(Champion* perso1, Champion* perso2);
Champion* selectionnerCible(Champion* c1, Champion* c2, Champion* c3,Champion* attaquant);
void combat3v3(Champion* tousLesChampions, int nbChampions,Champion* equipe1,Champion* equipe2,char* nomEquipe1,char* nomEquipe2);
void selectionnerpersos(Champion *tous_les_champions,int nb_champions,Champion*equipe1,Champion*equipe2,char* nomEquipe1,char* nomEquipe2);
void ajouter_personnage(const char* personnages);;
void vider();
float lirefloat(float *valeur);
Type liretype(Type *valeur);
